<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="CoreNLP-to-HTML.xsl" type="text/xsl"?>
<root>
  <document>
    <sentences>
      <sentence id="1">
        <tokens>
          <token id="1">
            <word>APPARENTLY</word>
            <lemma>apparently</lemma>
            <CharacterOffsetBegin>0</CharacterOffsetBegin>
            <CharacterOffsetEnd>10</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
          </token>
          <token id="2">
            <word>there</word>
            <lemma>there</lemma>
            <CharacterOffsetBegin>11</CharacterOffsetBegin>
            <CharacterOffsetEnd>16</CharacterOffsetEnd>
            <POS>EX</POS>
            <NER>O</NER>
          </token>
          <token id="3">
            <word>is</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>17</CharacterOffsetBegin>
            <CharacterOffsetEnd>19</CharacterOffsetEnd>
            <POS>VBZ</POS>
            <NER>O</NER>
          </token>
          <token id="4">
            <word>no</word>
            <lemma>no</lemma>
            <CharacterOffsetBegin>20</CharacterOffsetBegin>
            <CharacterOffsetEnd>22</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
          </token>
          <token id="5">
            <word>new</word>
            <lemma>new</lemma>
            <CharacterOffsetBegin>23</CharacterOffsetBegin>
            <CharacterOffsetEnd>26</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
          </token>
          <token id="6">
            <word>hot</word>
            <lemma>hot</lemma>
            <CharacterOffsetBegin>27</CharacterOffsetBegin>
            <CharacterOffsetEnd>30</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
          </token>
          <token id="7">
            <word>restaurant</word>
            <lemma>restaurant</lemma>
            <CharacterOffsetBegin>31</CharacterOffsetBegin>
            <CharacterOffsetEnd>41</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
          </token>
          <token id="8">
            <word>in</word>
            <lemma>in</lemma>
            <CharacterOffsetBegin>42</CharacterOffsetBegin>
            <CharacterOffsetEnd>44</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
          </token>
          <token id="9">
            <word>Atlanta</word>
            <lemma>Atlanta</lemma>
            <CharacterOffsetBegin>45</CharacterOffsetBegin>
            <CharacterOffsetEnd>52</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>LOCATION</NER>
          </token>
          <token id="10">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>52</CharacterOffsetBegin>
            <CharacterOffsetEnd>53</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (S (ADVP (RB APPARENTLY)) (NP (EX there)) (VP (VBZ is) (NP (NP (DT no) (JJ new) (JJ hot) (NN restaurant)) (PP (IN in) (NP (NNP Atlanta))))) (. .))) </parse>
        <basic-dependencies>
          <dep type="advmod">
            <governor idx="3">is</governor>
            <dependent idx="1">APPARENTLY</dependent>
          </dep>
          <dep type="expl">
            <governor idx="3">is</governor>
            <dependent idx="2">there</dependent>
          </dep>
          <dep type="det">
            <governor idx="7">restaurant</governor>
            <dependent idx="4">no</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">restaurant</governor>
            <dependent idx="5">new</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">restaurant</governor>
            <dependent idx="6">hot</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">is</governor>
            <dependent idx="7">restaurant</dependent>
          </dep>
          <dep type="prep">
            <governor idx="7">restaurant</governor>
            <dependent idx="8">in</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="8">in</governor>
            <dependent idx="9">Atlanta</dependent>
          </dep>
        </basic-dependencies>
        <collapsed-dependencies>
          <dep type="advmod">
            <governor idx="3">is</governor>
            <dependent idx="1">APPARENTLY</dependent>
          </dep>
          <dep type="expl">
            <governor idx="3">is</governor>
            <dependent idx="2">there</dependent>
          </dep>
          <dep type="det">
            <governor idx="7">restaurant</governor>
            <dependent idx="4">no</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">restaurant</governor>
            <dependent idx="5">new</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">restaurant</governor>
            <dependent idx="6">hot</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">is</governor>
            <dependent idx="7">restaurant</dependent>
          </dep>
          <dep type="prep_in">
            <governor idx="7">restaurant</governor>
            <dependent idx="9">Atlanta</dependent>
          </dep>
        </collapsed-dependencies>
        <collapsed-ccprocessed-dependencies>
          <dep type="advmod">
            <governor idx="3">is</governor>
            <dependent idx="1">APPARENTLY</dependent>
          </dep>
          <dep type="expl">
            <governor idx="3">is</governor>
            <dependent idx="2">there</dependent>
          </dep>
          <dep type="det">
            <governor idx="7">restaurant</governor>
            <dependent idx="4">no</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">restaurant</governor>
            <dependent idx="5">new</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">restaurant</governor>
            <dependent idx="6">hot</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">is</governor>
            <dependent idx="7">restaurant</dependent>
          </dep>
          <dep type="prep_in">
            <governor idx="7">restaurant</governor>
            <dependent idx="9">Atlanta</dependent>
          </dep>
        </collapsed-ccprocessed-dependencies>
      </sentence>
      <sentence id="2">
        <tokens>
          <token id="1">
            <word>Or</word>
            <lemma>or</lemma>
            <CharacterOffsetBegin>54</CharacterOffsetBegin>
            <CharacterOffsetEnd>56</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
          </token>
          <token id="2">
            <word>Detroit</word>
            <lemma>Detroit</lemma>
            <CharacterOffsetBegin>57</CharacterOffsetBegin>
            <CharacterOffsetEnd>64</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>LOCATION</NER>
          </token>
          <token id="3">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>64</CharacterOffsetBegin>
            <CharacterOffsetEnd>65</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (FRAG (CC Or) (ADVP (NNP Detroit)) (. .))) </parse>
        <basic-dependencies>
          <dep type="dep">
            <governor idx="2">Detroit</governor>
            <dependent idx="1">Or</dependent>
          </dep>
        </basic-dependencies>
        <collapsed-dependencies>
          <dep type="dep">
            <governor idx="2">Detroit</governor>
            <dependent idx="1">Or</dependent>
          </dep>
        </collapsed-dependencies>
        <collapsed-ccprocessed-dependencies>
          <dep type="dep">
            <governor idx="2">Detroit</governor>
            <dependent idx="1">Or</dependent>
          </dep>
        </collapsed-ccprocessed-dependencies>
      </sentence>
      <sentence id="3">
        <tokens>
          <token id="1">
            <word>Or</word>
            <lemma>or</lemma>
            <CharacterOffsetBegin>66</CharacterOffsetBegin>
            <CharacterOffsetEnd>68</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
          </token>
          <token id="2">
            <word>Dallas</word>
            <lemma>Dallas</lemma>
            <CharacterOffsetBegin>69</CharacterOffsetBegin>
            <CharacterOffsetEnd>75</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>LOCATION</NER>
          </token>
          <token id="3">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>75</CharacterOffsetBegin>
            <CharacterOffsetEnd>76</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (FRAG (CC Or) (ADVP (NNP Dallas)) (. .))) </parse>
        <basic-dependencies>
          <dep type="dep">
            <governor idx="2">Dallas</governor>
            <dependent idx="1">Or</dependent>
          </dep>
        </basic-dependencies>
        <collapsed-dependencies>
          <dep type="dep">
            <governor idx="2">Dallas</governor>
            <dependent idx="1">Or</dependent>
          </dep>
        </collapsed-dependencies>
        <collapsed-ccprocessed-dependencies>
          <dep type="dep">
            <governor idx="2">Dallas</governor>
            <dependent idx="1">Or</dependent>
          </dep>
        </collapsed-ccprocessed-dependencies>
      </sentence>
      <sentence id="4">
        <tokens>
          <token id="1">
            <word>Or</word>
            <lemma>or</lemma>
            <CharacterOffsetBegin>77</CharacterOffsetBegin>
            <CharacterOffsetEnd>79</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
          </token>
          <token id="2">
            <word>Philadelphia</word>
            <lemma>Philadelphia</lemma>
            <CharacterOffsetBegin>80</CharacterOffsetBegin>
            <CharacterOffsetEnd>92</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>LOCATION</NER>
          </token>
          <token id="3">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>92</CharacterOffsetBegin>
            <CharacterOffsetEnd>93</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (FRAG (CC Or) (ADVP (NNP Philadelphia)) (. .))) </parse>
        <basic-dependencies>
          <dep type="dep">
            <governor idx="2">Philadelphia</governor>
            <dependent idx="1">Or</dependent>
          </dep>
        </basic-dependencies>
        <collapsed-dependencies>
          <dep type="dep">
            <governor idx="2">Philadelphia</governor>
            <dependent idx="1">Or</dependent>
          </dep>
        </collapsed-dependencies>
        <collapsed-ccprocessed-dependencies>
          <dep type="dep">
            <governor idx="2">Philadelphia</governor>
            <dependent idx="1">Or</dependent>
          </dep>
        </collapsed-ccprocessed-dependencies>
      </sentence>
      <sentence id="5">
        <tokens>
          <token id="1">
            <word>Or</word>
            <lemma>or</lemma>
            <CharacterOffsetBegin>94</CharacterOffsetBegin>
            <CharacterOffsetEnd>96</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
          </token>
          <token id="2">
            <word>Phoenix</word>
            <lemma>Phoenix</lemma>
            <CharacterOffsetBegin>97</CharacterOffsetBegin>
            <CharacterOffsetEnd>104</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>LOCATION</NER>
          </token>
          <token id="3">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>104</CharacterOffsetBegin>
            <CharacterOffsetEnd>105</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (CC Or)) (ADJP (NNP Phoenix)) (. .))) </parse>
        <basic-dependencies>
          <dep type="dep">
            <governor idx="2">Phoenix</governor>
            <dependent idx="1">Or</dependent>
          </dep>
        </basic-dependencies>
        <collapsed-dependencies>
          <dep type="dep">
            <governor idx="2">Phoenix</governor>
            <dependent idx="1">Or</dependent>
          </dep>
        </collapsed-dependencies>
        <collapsed-ccprocessed-dependencies>
          <dep type="dep">
            <governor idx="2">Phoenix</governor>
            <dependent idx="1">Or</dependent>
          </dep>
        </collapsed-ccprocessed-dependencies>
      </sentence>
      <sentence id="6">
        <tokens>
          <token id="1">
            <word>In</word>
            <lemma>in</lemma>
            <CharacterOffsetBegin>106</CharacterOffsetBegin>
            <CharacterOffsetEnd>108</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
          </token>
          <token id="2">
            <word>fact</word>
            <lemma>fact</lemma>
            <CharacterOffsetBegin>109</CharacterOffsetBegin>
            <CharacterOffsetEnd>113</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
          </token>
          <token id="3">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>113</CharacterOffsetBegin>
            <CharacterOffsetEnd>114</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
          </token>
          <token id="4">
            <word>you</word>
            <lemma>you</lemma>
            <CharacterOffsetBegin>115</CharacterOffsetBegin>
            <CharacterOffsetEnd>118</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
          </token>
          <token id="5">
            <word>would</word>
            <lemma>would</lemma>
            <CharacterOffsetBegin>119</CharacterOffsetBegin>
            <CharacterOffsetEnd>124</CharacterOffsetEnd>
            <POS>MD</POS>
            <NER>O</NER>
          </token>
          <token id="6">
            <word>be</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>125</CharacterOffsetBegin>
            <CharacterOffsetEnd>127</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
          </token>
          <token id="7">
            <word>hard</word>
            <lemma>hard</lemma>
            <CharacterOffsetBegin>128</CharacterOffsetBegin>
            <CharacterOffsetEnd>132</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
          </token>
          <token id="8">
            <word>pressed</word>
            <lemma>press</lemma>
            <CharacterOffsetBegin>133</CharacterOffsetBegin>
            <CharacterOffsetEnd>140</CharacterOffsetEnd>
            <POS>VBN</POS>
            <NER>O</NER>
          </token>
          <token id="9">
            <word>to</word>
            <lemma>to</lemma>
            <CharacterOffsetBegin>141</CharacterOffsetBegin>
            <CharacterOffsetEnd>143</CharacterOffsetEnd>
            <POS>TO</POS>
            <NER>O</NER>
          </token>
          <token id="10">
            <word>find</word>
            <lemma>find</lemma>
            <CharacterOffsetBegin>144</CharacterOffsetBegin>
            <CharacterOffsetEnd>148</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
          </token>
          <token id="11">
            <word>many</word>
            <lemma>many</lemma>
            <CharacterOffsetBegin>149</CharacterOffsetBegin>
            <CharacterOffsetEnd>153</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
          </token>
          <token id="12">
            <word>anywhere</word>
            <lemma>anywhere</lemma>
            <CharacterOffsetBegin>154</CharacterOffsetBegin>
            <CharacterOffsetEnd>162</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
          </token>
          <token id="13">
            <word>in</word>
            <lemma>in</lemma>
            <CharacterOffsetBegin>163</CharacterOffsetBegin>
            <CharacterOffsetEnd>165</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
          </token>
          <token id="14">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>166</CharacterOffsetBegin>
            <CharacterOffsetEnd>169</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
          </token>
          <token id="15">
            <word>United</word>
            <lemma>United</lemma>
            <CharacterOffsetBegin>170</CharacterOffsetBegin>
            <CharacterOffsetEnd>176</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>LOCATION</NER>
          </token>
          <token id="16">
            <word>States</word>
            <lemma>States</lemma>
            <CharacterOffsetBegin>177</CharacterOffsetBegin>
            <CharacterOffsetEnd>183</CharacterOffsetEnd>
            <POS>NNPS</POS>
            <NER>LOCATION</NER>
          </token>
          <token id="17">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>183</CharacterOffsetBegin>
            <CharacterOffsetEnd>184</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (S (PP (IN In) (NP (NN fact))) (, ,) (NP (PRP you)) (VP (MD would) (VP (VB be) (VP (ADVP (JJ hard)) (VBN pressed) (S (VP (TO to) (VP (VB find) (ADJP (JJ many)) (ADVP (RB anywhere)) (PP (IN in) (NP (DT the) (NNP United) (NNPS States))))))))) (. .))) </parse>
        <basic-dependencies>
          <dep type="prep">
            <governor idx="8">pressed</governor>
            <dependent idx="1">In</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="1">In</governor>
            <dependent idx="2">fact</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="8">pressed</governor>
            <dependent idx="4">you</dependent>
          </dep>
          <dep type="aux">
            <governor idx="8">pressed</governor>
            <dependent idx="5">would</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="8">pressed</governor>
            <dependent idx="6">be</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="8">pressed</governor>
            <dependent idx="7">hard</dependent>
          </dep>
          <dep type="aux">
            <governor idx="10">find</governor>
            <dependent idx="9">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="8">pressed</governor>
            <dependent idx="10">find</dependent>
          </dep>
          <dep type="acomp">
            <governor idx="10">find</governor>
            <dependent idx="11">many</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="10">find</governor>
            <dependent idx="12">anywhere</dependent>
          </dep>
          <dep type="prep">
            <governor idx="10">find</governor>
            <dependent idx="13">in</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">States</governor>
            <dependent idx="14">the</dependent>
          </dep>
          <dep type="nn">
            <governor idx="16">States</governor>
            <dependent idx="15">United</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="13">in</governor>
            <dependent idx="16">States</dependent>
          </dep>
        </basic-dependencies>
        <collapsed-dependencies>
          <dep type="prep_in">
            <governor idx="8">pressed</governor>
            <dependent idx="2">fact</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="8">pressed</governor>
            <dependent idx="4">you</dependent>
          </dep>
          <dep type="aux">
            <governor idx="8">pressed</governor>
            <dependent idx="5">would</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="8">pressed</governor>
            <dependent idx="6">be</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="8">pressed</governor>
            <dependent idx="7">hard</dependent>
          </dep>
          <dep type="aux">
            <governor idx="10">find</governor>
            <dependent idx="9">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="8">pressed</governor>
            <dependent idx="10">find</dependent>
          </dep>
          <dep type="acomp">
            <governor idx="10">find</governor>
            <dependent idx="11">many</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="10">find</governor>
            <dependent idx="12">anywhere</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">States</governor>
            <dependent idx="14">the</dependent>
          </dep>
          <dep type="nn">
            <governor idx="16">States</governor>
            <dependent idx="15">United</dependent>
          </dep>
          <dep type="prep_in">
            <governor idx="10">find</governor>
            <dependent idx="16">States</dependent>
          </dep>
        </collapsed-dependencies>
        <collapsed-ccprocessed-dependencies>
          <dep type="prep_in">
            <governor idx="8">pressed</governor>
            <dependent idx="2">fact</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="8">pressed</governor>
            <dependent idx="4">you</dependent>
          </dep>
          <dep type="aux">
            <governor idx="8">pressed</governor>
            <dependent idx="5">would</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="8">pressed</governor>
            <dependent idx="6">be</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="8">pressed</governor>
            <dependent idx="7">hard</dependent>
          </dep>
          <dep type="aux">
            <governor idx="10">find</governor>
            <dependent idx="9">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="8">pressed</governor>
            <dependent idx="10">find</dependent>
          </dep>
          <dep type="acomp">
            <governor idx="10">find</governor>
            <dependent idx="11">many</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="10">find</governor>
            <dependent idx="12">anywhere</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">States</governor>
            <dependent idx="14">the</dependent>
          </dep>
          <dep type="nn">
            <governor idx="16">States</governor>
            <dependent idx="15">United</dependent>
          </dep>
          <dep type="prep_in">
            <governor idx="10">find</governor>
            <dependent idx="16">States</dependent>
          </dep>
        </collapsed-ccprocessed-dependencies>
      </sentence>
    </sentences>
  </document>
</root>
